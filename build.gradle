buildscript {
    ext.kotlinVersion = '1.7.10'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.6.21"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:1.6.21")
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'java-gradle-plugin'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'org.jetbrains.dokka'

repositories {
    google()
    mavenCentral()
}
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

dependencies {

    def os = DefaultNativePlatform.currentOperatingSystem
    def arch = DefaultNativePlatform.currentArchitecture

    switch (true) {
        case os.windows && arch.i386:
            implementation "com.eclipsesource.j2v8:j2v8_win32_x86:4.6.0"
            break
        case os.windows && arch.amd64:
            implementation "com.eclipsesource.j2v8:j2v8_win32_x86_64:4.6.0"
            break
        case os.macOsX && arch.amd64:
            implementation "com.eclipsesource.j2v8:j2v8_macosx_x86_64:4.6.0"
            break
        case os.linux && arch.amd64:
            implementation "com.eclipsesource.j2v8:j2v8_linux_x86_64:4.8.0"
            break
        default:
            implementation("org.graalvm.js:js:22.3.0")
            println "No suitable V8 engine found for " +
                    "current OS (${os.displayName}) and " +
                    "architecture (${arch.displayName})"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3"
    implementation("guru.nidi:graphviz-java:0.18.1") // https://github.com/nidi3/graphviz-java
    implementation "junit:junit:4.12"
}

group = 'ru.mobileup'
version = '1.1.1'

gradlePlugin {
    plugins {
        moduleGraph {
            id = 'ru.mobileup.module-graph'
            implementationClass = 'ru.mobileup.modulegraph.gradle.ModuleGraphPlugin'
        }
    }
}

apply from: 'publish.gradle'